@ngdoc overview
@name Перевод на русский
@description

#Руководство по переводу

Здесь описываются специфичные термины из руководства разработчика и примеры их перевода, а так же другие особенности 
и сложные случаи, важные для поддержания однообразия материалов в чистовом варианте. Термины не жесткие. Можно склонять
и изменять при необходимости. 

* angular — Angular|Angular'а|Angular'у (не переводится. Пишется всегда с заглавной)
* Angular application — angular-приложение (если из текста очевидно, что ни о каком другом приложении речь не идет, 
  то слово angular можно опустить)
* callback — колбэк (функция обратного вызова слишком громоздко)
* CamelCase — ВерблюжийРегистр
* collection — коллекция
* compile function — функция компиляции
* data binding — привязка данных
* deep-linking — внешнее связывание
* deffered — должник, долг. Т.е. тот, кто дает обещание становится должником. В некоторых контекстах допустимо 
  переводить как отложенный или отсрочка.
* dependency injection — внедрение зависимости
* end-to-end (E2E) test — системное тестирование (_комплексное_ — менее распространенный вариант, поэтому следует
  заменить его на болеее употребительное _системное_ во всей документации).
* evaluate — вычисление ???
* getter — геттер (понятие не нравится, но оно вроде устоялось, а так это получатель)
* injector — инжектор? есть нормальное определение?
* instantiates — создавать экземпляр, экземпляр и т.п.
* interpolation — преобразование? interpolation function — преобразующая функция???
* link - линковка (или связывание) ???
* linking function — функция линковки (Ближе к оригиналу и перекликается с функцией компиляции)
* locale — локаль. Иногда лучше подходит _региональные установки_
* loverCamelCase — нижнеВерблюжийРегистр
* map — набор (в случаях events map, functions map и т.п.)
* mock, mock implementation — имитация
* observer — наблюдатель
* optional — не обязательно. (Старый вариант опционально стоит выпилить)
* polyfill — костыль
* promise — обещание, обещать, обещанный, в зависимости от контекста
* repeater — повторитель ??? Или лучше размножитель. Надо подумать
* round-trip application — многостраничное приложение
* scope — область видимости (??? я вот думаю удачное это определение для scope в контексте angular? Так как тут речь 
  больше о специальном объекте,а не о JavaScript scope (@maksimr) Тоже в сомнениях. Тем более есть понятие 
  scope object. Может лучше совсем не переводить (@tamtakoe))
* see — см. (Сокращайте в примечаниях и т.п. Т.е. почти всегда.)
* see for more detales — см. так же
* setter — сеттер (понятие не нравится, но оно вроде устоялось, а так это установщик)
* single-page application — одностраничное приложение
* transclusion — включение ???
* unit test — модульное тестирование (юнит-тестирование не по-русски)
* user experience — опыт эксплуатации
* view (понятие из шаблона MCV) — вид. Иногда лучше подходит слово _представление_, главное уточнить, что это одно и 
  то же.
* watches — наблюдатели ??? нехорошо, т.к. перекликается с observer. watch — это наблюдатель за переменной в области 
  видимости.
* widget — виджет


При первом упоминании в желательно указывать оригинальное название сложных понятий, напр.: 
«Что такое области видимости (scopes)?», особенно когда оно играет важную роль в тексте, а перевод его не очевиден. 
Это поможет быстрее сопоставить перевод с оригиналом. Или можно поставить ссылку на статью, разъясняющую понятие.

В русском языке не требуется определять всё и вся, поэтому из перевода следует выкидывать все притяжательные 
местоимения и артикли, а так же упрощать сложные конструкции. «Вы можете создать...» упрощается до «Можно создать...», 
«Angular-приложение», «Angular-фильтр», «сервис Angular» сокращается до «приложение», «фильтр», «сервис», т.к. из 
контекста и так ясно о чем идет речь.

В тексте часто встречаются фразы вроде angular-приложение, область видимости Angular, модуль angular и т.п. Если 
и так понятно о чем речь (в другом смысле эти понятия не встречаются), то определитель angular смело можно выкидывать.

Кстати, составные слова с иноязычной частью всегда пишутся через дефис angular-выражение, unit-тестирование. В ряде 
случаев английскую часть стоит транслитерировать: юнит-тестирование, дата-биндинг. Но лучше подобрать эквиваленты в 
русском: модульное тестирование, связывание данных.

need, want и т.п. можно перевести как нужно или необходимо. Для разнообразия стоит чередовать эти слова во фразах. 
Например: «При необходимости изменить $location из стороннего кода (например, через события DOM или во время 
тестирования), нужно вызвать функцию $apply для распространения изменений.» Здесь вначале употреблено «необходимо» 
(слабая нужда), потом — «нужно» (сильная нужда, только так, а не иначе).

Переводим здесь: http://angular.ru/ (нажимаете улучшить перевод и вперед :-)


#Соглашение по оформлению commit'ов и pull-request'ов (взято из официального репозитория)

Сообщение должно выглядеть следующим образом:

<pre>тип(что меняли): сообщение</pre>

Ссылку на то, что меняли можно взять из адресной строки браузера. Например:

<pre>translate(guide:bootstrap): Добавил перевод</pre>

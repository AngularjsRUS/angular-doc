@ngdoc overview
@name Tutorial: 1 - Статический Шаблон
@description

<ul doc-tutorial-nav="1"></ul>


Для того, чтобы проиллюстрировать, как Angular улучшает стандартный HTML, мы создадим *статическую* HTML-страницу, 
а затем посмотрим, как мы можем превратить этот HTML код в шаблон, который Angular будет использовать для
динамического отображения того же вида с другими данными.

В этом шаге мы добавим в HTML-страницу некоторые основные сведения о двух сотовых телефонах.

<div class="tabbable" show="true">
  <div class="tab-pane well" id="git-mac" title="Git на Mac/Linux">
    <ol>
      <li><p>Откатите ваш рабочий код до шага 1.</p>
          <pre>git checkout -f step-1</pre>
      </li>
      <li><p>Перезагрузите страницу или проверьте приложение 
             на <a href="http://angular.github.com/angular-phonecat/step-1/app">сервере Angular</a>.
          </p>
      </li>
    </ol>
  </div>
  
  <div class="tab-pane well" id="git-win" title="Git на Windows">
    <ol>
      <li><p>Откатите ваш рабочий код до шага 1.</p>
          <pre>git checkout -f step-1</pre>
      </li>
      <li><p>Перезагрузите страницу или проверьте приложение 
             на <a href="http://angular.github.com/angular-phonecat/step-1/app">сервере Angular</a>.
          </p>
      </li>
    </ol>
  </div>
  
</div>


Сейчас страница содержит список с информацией о двух телефонах.

Наиболее важные изменения перечислены ниже. Вы можете увидеть полный список изменений перейдя по ссылке {@link
https://github.com/angular/angular-phonecat/compare/step-0...step-1 GitHub}:

__`app/index.html`:__
<pre>
  <ul>
    <li>
      <span>Nexus S</span>
      <p>
        Fast just got faster with Nexus S.
      </p>
    </li>
    <li>
      <span>Motorola XOOM™ with Wi-Fi</span>
      <p>
        The Next, Next Generation tablet.
      </p>
    </li>
  </ul>
</pre>


# Давайте поэкспериментируем

* Попробуйте добавить более статичный HTML в `index.html`. Для примера можете добавить следующий HTML:

          <p>Total number of phones: 2</p>


# Идем дальше

На этом шаге мы добавили к вашему приложению статический HTML для отображения списка. Теперь, давайте перейдем
к {@link step_02 шагу 2}, чтобы узнать, как использовать AngularJS для динамической генерации того же списка.


<ul doc-tutorial-nav="1"></ul>
